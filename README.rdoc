= Ruby-Wallet

Ruby-Wallet provides abstracted access to any Bitcoin based coind JSON-RPC API. Ruby-Wallet organizes all the necessary features within a secure wallet abstraction, and utilizes its own account management system built using MongoDB. 

The built-in account management system has many flaws and will be removed in later versions of Bitcoin (https://github.com/bitcoin/bitcoin/issues/3816). Utilizing MongoDB to handle internal account transactions and balance management allows for live backups via replication to offsite MongoDB instances, fast/robust queries for wallet information and keeps the wallet.dat file small and minimal.

== Installation

Clone the repository, copy the sample config files to make config files. Compile the gem and install it locally, or specify the folder in your Gemfile.

  clone https://github.com/ruby-wallet/ruby-wallet

Copy and configure the gem database, encryption key for passwords, and coin(s) to manage to your setup

  cd ruby-wallet/config
  cp mongoid.sample.yml mongoid.yml
  cp config.sample.yml config.yml
  cp coins.sample.yml coins.yml

Compile the gem and install it locally

  gem build ruby-wallet.gemspec
  gem install ruby-wallet

Alternatively you can specify the local folder in your Gemfile

  gem 'ruby-wallet', path: '/home/usr/ruby-wallet'

== Usage

The simplest possible usage after configuration is complete

  RubyWallet.connect("BTC").balance
  # => 0.001

Confirm if addresses are valid using the wallet method

  wallet.valid_address?(address)
  # => true

Confirm address is owned by current wallet

  wallet.own_address?(address)

View the recent transactions of the entire wallet, or specify a range.

  wallet.recent_transactions(15)         # Returns 15 transactions 
  wallet.recent_transactions(15,999)     # Returns 15-999

== Wallet Encryption

Encrypt your wallet and unlock as needed for a specific amount of time and lock the wallet.

  wallet.encrypt
  wallet.unlock(20)                      # 20 seconds until the wallet relock automatically
  wallet.unlock                          # defaults to 20 seconds
  wallet.lock

Unlock can be used with a block of code to be executed once the wallet is unlocked. After the code is executed the wallet is re-locked automatically.

  wallet.unlock do
    account.send_amount(5.5, address)
  end

== Wallet Accounts

A wallet has many accounts, each account organizes one or more bitcoin addresses in the wallet into groups by their label. Accounting is handled within ruby-wallet's own MongoDB database abstracted above the coind client.

  account = wallet.create_account('label')

 

  wallet.accounts.with_balance           # returns array of the accounts with balance > 0

  account.addresses.count                # 1, as it already comes with an address
  account.unconfirmed_balance            # returns the balance of the account
  account.confirmed_balance              # returns the confirmed balance
  account.total_received                 # returns the total amount received by the account
  account.transactions                   # related transactions based on account label

You can send coins directly from an account, with validations to prevent overspending.

  account.send_amount(5.5, address)      # sends 5.5 coin to the address

== Account Transactions

A transaction has the following methods

  transaction = account.transactions

  transaction.txn_id
  transaction.account
  transaction.address
  transaction.recipient_account
  transaction.amount
  transaction.category
  transaction.confirmations
  transaction.occurred_at
  transaction.received_at
  transaction.timestamp

== Future Plans

I would like to implement the new RPC features such as multisigs, and increase the test coverage.


Donate to the ruby-wallet project:
1LJtuko15Ck1gq5H9K24iGnA1yvtcBMYa4


