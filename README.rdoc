= Ruby-Wallet

Ruby-Wallet provides abstracted access to any Bitcoin based coind JSON-RPC API. Ruby-Wallet organizes all the necessary features within a secure wallet abstraction, and utilizes its own double-entry bookkeeping account management system built using MongoDB. 

The built-in coind account management system has many flaws (balances are calculated by iterating through every transaction in the wallet, causing it to be slower as the number of transactions grow) and will be removed in later versions of Bitcoin (https://github.com/bitcoin/bitcoin/issues/3816). Utilizing MongoDB to handle internal account transactions and balance management allows for live backups via replication to offsite MongoDB instances, fast/robust queries for wallet information and keeps the wallet.dat file small and minimal.

== Installation

Clone the repository, copy the sample config files to make config files. Compile the gem and install it locally, or specify the folder in your Gemfile.

  clone https://github.com/ruby-wallet/ruby-wallet

Copy and configure the gem database, encryption key for passwords, and coin(s) to manage to your setup

  cd ruby-wallet/config
  cp mongoid.sample.yml mongoid.yml
  cp config.sample.yml config.yml
  cp coins.sample.yml coins.yml

Compile the gem and install it locally

  gem build ruby-wallet.gemspec
  gem install ruby-wallet

Alternatively you can specify the local folder, as in your vendor folder in Rails, in your Gemfile

  gem 'ruby-wallet', path: 'vendor/ruby-wallet'

== Usage

The simplest possible usage after configuration is complete

  RubyWallet.connect("BTC").balance
  # => 0.001

Confirm if addresses are valid using the wallet method

  wallet.valid_address?(address)
  # => true

Confirm address is owned by current wallet

  wallet.own_address?(address)

View the recent transactions of the entire wallet.

  wallet.transactions

== Wallet Encryption

Encrypting your wallet with the password supplied in the config file will enable encryption. Before every action, an unlock command will be used to unlock and automatically relock your wallet between protected actions. If your wallet is encrypted prior to setup, you must manually set the encrypted attribute to true. (Not fully implemented)

  wallet.encrypt

== Wallet Accounts

A wallet embeds many accounts, each account organizes one or more coind addresses by label. Account management is handled by ruby-wallet using a MongoDB database abstracted above the coind client.

  account = wallet.create_account(label)

  account.label                           # returns abel used within the wallet.dat file to associate addresses
  account.addresses                       # returns an array of addresses associated with the account, new addresses are last

  account.total_received                  # returns the total amount received by the account

  account.balance(minimum_confirmations)  # returns the balance of the account

  account.transactions                    # returns associated deposits and withdrawals
  account.deposits                        # returns associated deposits
  account.withdrawals                     # returns associated withdrawals
  account.transfers                       # returns associated transfers

Withdraw coins from an account, with validations to prevent overspending.

  account.withdraw(5.5, address)          # sends 5.5 coins to the withdrawal address

Transfer coins from one account to another, with validations to prevent overspending. Transfers do not create "move" transactions in the wallet.dat.

  account.transfer(5.5, recipeint_label)  # sends 5.5 coins to the recipient account

== Account Transactions

A transaction has the following methods

  transaction = account.transactions

  transaction.txn_id
  transaction.account
  transaction.address
  transaction.recipient_account
  transaction.amount
  transaction.category
  transaction.confirmations
  transaction.occurred_at
  transaction.received_at
  transaction.timestamp

== Future Plans

I would like to implement the new RPC features such as multisigs, and increase the test coverage.


Donate to the ruby-wallet project:
1LJtuko15Ck1gq5H9K24iGnA1yvtcBMYa4


