= Ruby-Wallet

Ruby-Wallet provides abstracted access to any Bitcoin based coind JSON-RPC API. Ruby-Wallet organizes all the necessary features within a secure wallet abstraction, and utilizes its own account management system built using MongoDB. The built-in account management system has many flaws and will be removed in later versions of Bitcoin (https://github.com/bitcoin/bitcoin/issues/3816). Utilizing MongoDB to handle internal account transactions and balance management allows for live backups via replication to offsite MongoDB instances, fast and robust queries for wallet information and keeps the wallet.dat file small and minimal.

== Installation

Add the following to your Gemfile

  gem "ruby-wallet", :git => "https://github.com/ruby-wallet/ruby-wallet.git", require: "coind"


== Usage

The simplest possible usage

  RubyWallet.connect(username: 'coinrpc', password: 'rpcpassword').balance
  # => 0.001


== Host, Port and SSL

You can specify connection information for remote clients.

  wallet = RubyWallet.connect(username: 'coinrpc', password: 'rpcpassword',
                              host: 'blackwavelabs.com', port: 38332, ssl: true)

You can confirm if addresses are valid using the wallet method

  wallet.validate_address(address)

You can view the recent transactions of the entire wallet, or just a specific range.

  wallet.recent_transactions(15)         # Returns 15 transactions 
  wallet.recent_transactions(15,999)     # Returns 15-999

== Wallet Encryption

Bitcoin now supports wallet encryption. You should encrypt your wallet and unlock as needed for a specific amount of time and lock the wallet.

  wallet.encrypt("passphrase")
  wallet.unlock("passphrase", 20)        # 20 seconds until the wallet relock automatically
  wallet.unlock("passphrase")            # defaults to 20 seconds
  wallet.lock


You can pass the encryption passphrase along with a block of code to be executed once the wallet is unlocked. After the code is executed the wallet is re-locked automatically.

  wallet.unlock("passphrase") do
    account.send_amount 5.5, to: address
  end


== Wallet Accounts

A wallet has many accounts, each account organizes more than one bitcoin addresses in the wallet into groups by their label.

  account = wallet.accounts.new('label name')
  wallet.accounts.with_balance         # returns array of the accounts with balance > 0

  account.addresses.count              # 1, as it already comes with an address
  account.balance                      # returns the balance of the account
  account.total_received               # returns the total amount received by the account
  account.transactions(5)              # returns array of the 5 latest transactions
  account.transactions(5, 10)          # returns array of transactions between the 5th and 10th latest transaction

You can send bitcoins directly from an account, with validations to prevent overspending.

  account.send_amount 5.5, to: address # sends 5.5 bitcoin to the address

# Document send_many function

== Account Addresses

Each account organizes a collection of addresses under a label. Addresses have their own set of useful methods.

  address = account.addresses.new
  address.address                      # 8hdsakdjh82d9327ccb64642c - the address hash
  address.total_received               # returns the total amount received by the address

  # This feature has been deprecated for security purposes
  address.private_key                  # returns the private key for the address


== Account Transactions

A transaction has the following methods

  transaction = account.transactions

  transaction.id
  transaction.account
  transaction.address
  transaction.recipient_account
  transaction.amount
  transaction.category
  transaction.confirmations
  transaction.occurred_at
  transaction.received_at


== Future Plans

I would like to implement the new RPC features such as multisigs, and feautres unique to other 
coins now that the software is more coin neutral. 

I would also like to make it easy to receive push notifications from the coind client so I don't 
have to short poll for new transactions and balance changes.


Donate to the ruby-wallet project

1LJtuko15Ck1gq5H9K24iGnA1yvtcBMYa4

